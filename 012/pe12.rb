=begin 
The sequence of triangle numbers is generated by adding the natural numbers.
So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
=end

def triangle_number(x)
  triangle_num = (x*(x+1))/2
  triangle_num
end

# since divisor pairs mirror each other past sqrt(num), we only have to look
#   for divisors up to sqrt(num). So for each pair we add 2 to num_div.
def number_of_divisors(num)
  num_div = 0
  sqrt = Math.sqrt(num)
  count = 1

  until count > sqrt do
    num_div += 2 if num % count == 0
    count += 1
  end

  # but if num is a perfect square correct it to have 1 less divisor because
  #   one of the divisor pairs are the same numbers
  num_div -= 1 if sqrt**2 == num

  num_div
end

def first_with_number_of_divisors_over(divisors)
  count = 1

  until number_of_divisors(triangle_number(count)) > divisors do
    count += 1
  end
  triangle_number(count)
end

puts first_with_number_of_divisors_over(500)

#76576500
#
#real  0m5.240s
#user  0m5.220s
#sys 0m0.019s



